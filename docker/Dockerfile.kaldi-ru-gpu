# syntax=docker/dockerfile:labs
ARG RUVERSION=0.22
ARG BASE_IMAGE=alphacep/kaldi-vosk-server-gpu:latest

FROM debian:11-slim AS slim-base

FROM slim-base AS unzip
ARG DEBIAN_FRONTEND
RUN apt-get update \
    && apt-get install -y axel wget unzip \
    && rm -rf /var/lib/apt/lists/*
WORKDIR /rootfs

FROM unzip as model
ARG RUVERSION
#RUN axel -n 5 http://alphacephei.com/kaldi/models/vosk-model-ru-${RUVERSION}.zip 
ADD --link http://alphacephei.com/kaldi/models/vosk-model-ru-${RUVERSION}.zip ./
RUN unzip vosk-model-ru-${RUVERSION}.zip
RUN mv vosk-model-ru-${RUVERSION} model
RUN rm -rf model/extra vosk-model-ru-${RUVERSION}.zip
RUN TMP=$(tail -n +2 model/conf/model.conf) echo "$TMP" > model/conf/model.conf

FROM ${BASE_IMAGE}

#RUN mkdir /opt/vosk-model-ru \
#   && cd /opt/vosk-model-ru \
#   && wget -q http://alphacephei.com/kaldi/models/vosk-model-ru-${RUVERSION}.zip \
#   && unzip vosk-model-ru-${RUVERSION}.zip \
#   && mv vosk-model-ru-${RUVERSION} model \
#   && rm -rf model/extra \
#   && rm -rf vosk-model-ru-${RUVERSION}.zip

COPY --from=model /rootfs/model /opt/vosk-model-ru/model

# temporary stop-gap solution
RUN cd /opt/vosk-server/websocket-gpu-batch && sed -i 's/GpuInit()/if len(sys.argv) > 1:\n      args.model_path = sys.argv[1]\n    GpuInit()/m' asr_server_gpu.py && sed -i 's/BatchModel()/BatchModel(args.model_path)/' asr_server_gpu.py

EXPOSE 2700
WORKDIR /opt/vosk-server/websocket-gpu-batch
CMD [ "python3", "./asr_server_gpu.py", "/opt/vosk-model-ru/model" ]
